{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHUSHAN NAVSAGAR\\\\OneDrive\\\\Desktop\\\\Dr.Aarogya AI\\\\frontend\\\\src\\\\components\\\\HealthProfiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './HealthProfiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HealthProfiles() {\n  _s();\n  const [step, setStep] = useState('login');\n  const [userData, setUserData] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // Form states\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [healthForm, setHealthForm] = useState({\n    name: '',\n    age: '',\n    gender: 'Male',\n    height: '',\n    weight: '',\n    bloodType: 'O+',\n    allergies: '',\n    conditions: '',\n    bloodPressure: '',\n    cholesterol: '',\n    glucose: ''\n  });\n  const handleLogin = e => {\n    e.preventDefault();\n    // In a real app, this would authenticate with a backend\n    setStep('collect-data');\n  };\n  const handleHealthFormSubmit = e => {\n    e.preventDefault();\n\n    // Process the form data\n    const processedData = {\n      ...healthForm,\n      bmi: calculateBMI(healthForm.height, healthForm.weight),\n      allergies: healthForm.allergies.split(',').map(item => item.trim()).filter(item => item),\n      conditions: healthForm.conditions.split(',').map(item => item.trim()).filter(item => item),\n      // Generate predictions based on input data\n      predictions: generatePredictions(healthForm),\n      // Generate trends\n      trends: {\n        bloodPressure: generateTrends('bloodPressure', healthForm.bloodPressure),\n        weight: generateTrends('weight', healthForm.weight)\n      }\n    };\n    setUserData(processedData);\n    setStep('display-profile');\n  };\n  const calculateBMI = (height, weight) => {\n    // Height in cm, weight in kg\n    const heightInMeters = parseFloat(height) / 100;\n    const weightInKg = parseFloat(weight);\n    if (isNaN(heightInMeters) || isNaN(weightInKg) || heightInMeters === 0) {\n      return \"N/A\";\n    }\n    const bmi = (weightInKg / (heightInMeters * heightInMeters)).toFixed(1);\n    return bmi;\n  };\n  const generatePredictions = formData => {\n    // This is a simplified mock prediction generator\n    // In a real app, this would use ML models or API calls\n\n    const predictions = [];\n    const today = new Date();\n\n    // Cardiovascular risk based on age, blood pressure\n    const age = parseInt(formData.age);\n    const bp = formData.bloodPressure.split('/');\n    const systolic = bp[0] ? parseInt(bp[0]) : 120;\n    const diastolic = bp[1] ? parseInt(bp[1]) : 80;\n    let cvRiskScore = 0;\n    if (age > 50) cvRiskScore += 15;\n    if (age > 60) cvRiskScore += 10;\n    if (systolic > 140 || diastolic > 90) cvRiskScore += 25;\n    predictions.push({\n      date: today.toISOString().split('T')[0],\n      risk: `${cvRiskScore > 30 ? 'Moderate' : 'Low'} risk of cardiovascular disease`,\n      score: cvRiskScore\n    });\n\n    // Diabetes risk based on weight, age, glucose\n    let diabetesRiskScore = 0;\n    const bmi = calculateBMI(formData.height, formData.weight);\n    const glucose = parseInt(formData.glucose) || 100;\n    if (bmi > 25) diabetesRiskScore += 15;\n    if (bmi > 30) diabetesRiskScore += 15;\n    if (age > 45) diabetesRiskScore += 10;\n    if (glucose > 100) diabetesRiskScore += 20;\n    const lastMonth = new Date();\n    lastMonth.setMonth(today.getMonth() - 1);\n    predictions.push({\n      date: lastMonth.toISOString().split('T')[0],\n      risk: `${diabetesRiskScore > 30 ? 'Moderate' : 'Low'} risk of type 2 diabetes`,\n      score: diabetesRiskScore\n    });\n    return predictions;\n  };\n  const generateTrends = (type, currentValue) => {\n    // Generate mock trend data based on current value\n    const today = new Date();\n    const trends = [];\n\n    // Add current value\n    trends.push({\n      date: today.toISOString().split('T')[0],\n      value: type === 'bloodPressure' ? currentValue : `${currentValue} kg`\n    });\n\n    // Add previous values with slight variations\n    for (let i = 1; i <= 2; i++) {\n      const prevDate = new Date();\n      prevDate.setMonth(today.getMonth() - i);\n      if (type === 'bloodPressure') {\n        const bp = currentValue.split('/');\n        const systolic = parseInt(bp[0]) || 120;\n        const diastolic = parseInt(bp[1]) || 80;\n\n        // Add small random variations\n        const systolicVar = systolic + Math.floor(Math.random() * 6) - 3;\n        const diastolicVar = diastolic + Math.floor(Math.random() * 4) - 2;\n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${systolicVar}/${diastolicVar}`\n        });\n      } else if (type === 'weight') {\n        const weight = parseFloat(currentValue);\n        // Add small random variations to weight\n        const weightVar = (weight + (Math.random() * 2 - 1)).toFixed(1);\n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${weightVar} kg`\n        });\n      }\n    }\n    return trends;\n  };\n  const handleInputChange = (e, formType) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formType === 'login') {\n      setLoginForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (formType === 'health') {\n      setHealthForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Render login screen\n  const renderLogin = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login to Access Your Health Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: loginForm.email,\n            onChange: e => handleInputChange(e, 'login'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: loginForm.password,\n            onChange: e => handleInputChange(e, 'login'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-help\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 34\n        }, this), \" | \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#forgot\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render health data collection form\n  const renderHealthForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"health-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleHealthFormSubmit,\n        className: \"health-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Personal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                value: healthForm.name,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"age\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"age\",\n                name: \"age\",\n                min: \"1\",\n                max: \"120\",\n                value: healthForm.age,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"gender\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"gender\",\n                name: \"gender\",\n                value: healthForm.gender,\n                onChange: e => handleInputChange(e, 'health'),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bloodType\",\n                children: \"Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"bloodType\",\n                name: \"bloodType\",\n                value: healthForm.bloodType,\n                onChange: e => handleInputChange(e, 'health'),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A+\",\n                  children: \"A+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A-\",\n                  children: \"A-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B+\",\n                  children: \"B+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B-\",\n                  children: \"B-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB+\",\n                  children: \"AB+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB-\",\n                  children: \"AB-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O+\",\n                  children: \"O+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O-\",\n                  children: \"O-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Body Measurements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"height\",\n                children: \"Height (cm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"height\",\n                name: \"height\",\n                min: \"50\",\n                max: \"250\",\n                value: healthForm.height,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"weight\",\n                children: \"Weight (kg)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"weight\",\n                name: \"weight\",\n                min: \"1\",\n                max: \"300\",\n                step: \"0.1\",\n                value: healthForm.weight,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Health Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bloodPressure\",\n                children: \"Blood Pressure (systolic/diastolic)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"bloodPressure\",\n                name: \"bloodPressure\",\n                placeholder: \"120/80\",\n                value: healthForm.bloodPressure,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"glucose\",\n                children: \"Glucose (mg/dL)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"glucose\",\n                name: \"glucose\",\n                min: \"50\",\n                max: \"300\",\n                value: healthForm.glucose,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cholesterol\",\n                children: \"Cholesterol (mg/dL)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"cholesterol\",\n                name: \"cholesterol\",\n                min: \"50\",\n                max: \"300\",\n                value: healthForm.cholesterol,\n                onChange: e => handleInputChange(e, 'health'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Medical History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"allergies\",\n              children: \"Allergies (comma separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"allergies\",\n              name: \"allergies\",\n              placeholder: \"Peanuts, Penicillin, etc.\",\n              value: healthForm.allergies,\n              onChange: e => handleInputChange(e, 'health')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"conditions\",\n              children: \"Medical Conditions (comma separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"conditions\",\n              name: \"conditions\",\n              placeholder: \"Hypertension, Asthma, etc.\",\n              value: healthForm.conditions,\n              onChange: e => handleInputChange(e, 'health')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Generate Health Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render profile with the collected data\n  const renderProfile = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: userData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [userData.age, \" years \\u2022 \", userData.gender, \" \\u2022 \", userData.bloodType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'overview' ? 'active' : '',\n          onClick: () => setActiveTab('overview'),\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'predictions' ? 'active' : '',\n          onClick: () => setActiveTab('predictions'),\n          children: \"Risk Predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'trends' ? 'active' : '',\n          onClick: () => setActiveTab('trends'),\n          children: \"Health Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-content\",\n        children: [activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metrics-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Height\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [userData.height, \" cm\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [userData.weight, \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"BMI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: userData.bmi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: userData.bloodType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metrics-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Blood Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: userData.bloodPressure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Glucose\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [userData.glucose, \" mg/dL\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Cholesterol\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [userData.cholesterol, \" mg/dL\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Allergies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), userData.allergies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tag-list\",\n              children: userData.allergies.map((allergy, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"tag\",\n                children: allergy\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No allergies reported\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Medical Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), userData.conditions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tag-list\",\n              children: userData.conditions.map((condition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"tag\",\n                children: condition\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No medical conditions reported\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), activeTab === 'predictions' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"predictions-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Health Risk Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"predictions-list\",\n            children: userData.predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prediction-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prediction-date\",\n                children: prediction.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prediction-risk\",\n                children: prediction.risk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"risk-meter\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"risk-level\",\n                  style: {\n                    width: `${prediction.score}%`,\n                    backgroundColor: prediction.score < 30 ? '#2ecc71' : prediction.score < 70 ? '#f39c12' : '#e74c3c'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), activeTab === 'trends' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trends-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Health Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Blood Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-data\",\n              children: userData.trends.bloodPressure.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trend-point\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-date\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-value\",\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-data\",\n              children: userData.trends.weight.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trend-point\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-date\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-value\",\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"profiles\",\n    className: \"health-profiles\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Health Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-description\",\n      children: \"Secure health records and prediction history for each user, offering insights and trend analysis over time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), step === 'login' && renderLogin(), step === 'collect-data' && renderHealthForm(), step === 'display-profile' && userData && renderProfile()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthProfiles, \"AYNS09vNhmtJjvE0C5KM1qWl6aI=\");\n_c = HealthProfiles;\nexport default HealthProfiles;\nvar _c;\n$RefreshReg$(_c, \"HealthProfiles\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HealthProfiles","_s","step","setStep","userData","setUserData","activeTab","setActiveTab","loginForm","setLoginForm","email","password","healthForm","setHealthForm","name","age","gender","height","weight","bloodType","allergies","conditions","bloodPressure","cholesterol","glucose","handleLogin","e","preventDefault","handleHealthFormSubmit","processedData","bmi","calculateBMI","split","map","item","trim","filter","predictions","generatePredictions","trends","generateTrends","heightInMeters","parseFloat","weightInKg","isNaN","toFixed","formData","today","Date","parseInt","bp","systolic","diastolic","cvRiskScore","push","date","toISOString","risk","score","diabetesRiskScore","lastMonth","setMonth","getMonth","type","currentValue","value","i","prevDate","systolicVar","Math","floor","random","diastolicVar","weightVar","handleInputChange","formType","target","prev","renderLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","href","renderHealthForm","min","max","placeholder","renderProfile","onClick","length","allergy","index","condition","prediction","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/BHUSHAN NAVSAGAR/OneDrive/Desktop/Dr.Aarogya AI/frontend/src/components/HealthProfiles.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './HealthProfiles.css';\n\nfunction HealthProfiles() {\n  const [step, setStep] = useState('login');\n  const [userData, setUserData] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  \n  // Form states\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  \n  const [healthForm, setHealthForm] = useState({\n    name: '',\n    age: '',\n    gender: 'Male',\n    height: '',\n    weight: '',\n    bloodType: 'O+',\n    allergies: '',\n    conditions: '',\n    bloodPressure: '',\n    cholesterol: '',\n    glucose: ''\n  });\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // In a real app, this would authenticate with a backend\n    setStep('collect-data');\n  };\n\n  const handleHealthFormSubmit = (e) => {\n    e.preventDefault();\n    \n    // Process the form data\n    const processedData = {\n      ...healthForm,\n      bmi: calculateBMI(healthForm.height, healthForm.weight),\n      allergies: healthForm.allergies.split(',').map(item => item.trim()).filter(item => item),\n      conditions: healthForm.conditions.split(',').map(item => item.trim()).filter(item => item),\n      // Generate predictions based on input data\n      predictions: generatePredictions(healthForm),\n      // Generate trends\n      trends: {\n        bloodPressure: generateTrends('bloodPressure', healthForm.bloodPressure),\n        weight: generateTrends('weight', healthForm.weight)\n      }\n    };\n    \n    setUserData(processedData);\n    setStep('display-profile');\n  };\n\n  const calculateBMI = (height, weight) => {\n    // Height in cm, weight in kg\n    const heightInMeters = parseFloat(height) / 100;\n    const weightInKg = parseFloat(weight);\n    \n    if (isNaN(heightInMeters) || isNaN(weightInKg) || heightInMeters === 0) {\n      return \"N/A\";\n    }\n    \n    const bmi = (weightInKg / (heightInMeters * heightInMeters)).toFixed(1);\n    return bmi;\n  };\n\n  const generatePredictions = (formData) => {\n    // This is a simplified mock prediction generator\n    // In a real app, this would use ML models or API calls\n    \n    const predictions = [];\n    const today = new Date();\n    \n    // Cardiovascular risk based on age, blood pressure\n    const age = parseInt(formData.age);\n    const bp = formData.bloodPressure.split('/');\n    const systolic = bp[0] ? parseInt(bp[0]) : 120;\n    const diastolic = bp[1] ? parseInt(bp[1]) : 80;\n    \n    let cvRiskScore = 0;\n    if (age > 50) cvRiskScore += 15;\n    if (age > 60) cvRiskScore += 10;\n    if (systolic > 140 || diastolic > 90) cvRiskScore += 25;\n    \n    predictions.push({\n      date: today.toISOString().split('T')[0],\n      risk: `${cvRiskScore > 30 ? 'Moderate' : 'Low'} risk of cardiovascular disease`,\n      score: cvRiskScore\n    });\n    \n    // Diabetes risk based on weight, age, glucose\n    let diabetesRiskScore = 0;\n    const bmi = calculateBMI(formData.height, formData.weight);\n    const glucose = parseInt(formData.glucose) || 100;\n    \n    if (bmi > 25) diabetesRiskScore += 15;\n    if (bmi > 30) diabetesRiskScore += 15;\n    if (age > 45) diabetesRiskScore += 10;\n    if (glucose > 100) diabetesRiskScore += 20;\n    \n    const lastMonth = new Date();\n    lastMonth.setMonth(today.getMonth() - 1);\n    \n    predictions.push({\n      date: lastMonth.toISOString().split('T')[0],\n      risk: `${diabetesRiskScore > 30 ? 'Moderate' : 'Low'} risk of type 2 diabetes`,\n      score: diabetesRiskScore\n    });\n    \n    return predictions;\n  };\n\n  const generateTrends = (type, currentValue) => {\n    // Generate mock trend data based on current value\n    const today = new Date();\n    const trends = [];\n    \n    // Add current value\n    trends.push({\n      date: today.toISOString().split('T')[0],\n      value: type === 'bloodPressure' ? currentValue : `${currentValue} kg`\n    });\n    \n    // Add previous values with slight variations\n    for (let i = 1; i <= 2; i++) {\n      const prevDate = new Date();\n      prevDate.setMonth(today.getMonth() - i);\n      \n      if (type === 'bloodPressure') {\n        const bp = currentValue.split('/');\n        const systolic = parseInt(bp[0]) || 120;\n        const diastolic = parseInt(bp[1]) || 80;\n        \n        // Add small random variations\n        const systolicVar = systolic + Math.floor(Math.random() * 6) - 3;\n        const diastolicVar = diastolic + Math.floor(Math.random() * 4) - 2;\n        \n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${systolicVar}/${diastolicVar}`\n        });\n      } else if (type === 'weight') {\n        const weight = parseFloat(currentValue);\n        // Add small random variations to weight\n        const weightVar = (weight + (Math.random() * 2 - 1)).toFixed(1);\n        \n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${weightVar} kg`\n        });\n      }\n    }\n    \n    return trends;\n  };\n\n  const handleInputChange = (e, formType) => {\n    const { name, value } = e.target;\n    \n    if (formType === 'login') {\n      setLoginForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (formType === 'health') {\n      setHealthForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Render login screen\n  const renderLogin = () => {\n    return (\n      <div className=\"login-container\">\n        <h3>Login to Access Your Health Profile</h3>\n        <form onSubmit={handleLogin} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              name=\"email\" \n              value={loginForm.email} \n              onChange={(e) => handleInputChange(e, 'login')} \n              required \n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              name=\"password\" \n              value={loginForm.password} \n              onChange={(e) => handleInputChange(e, 'login')} \n              required \n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">Login</button>\n        </form>\n        <p className=\"login-help\">\n          Don't have an account? <a href=\"#signup\">Sign up</a> | <a href=\"#forgot\">Forgot password?</a>\n        </p>\n      </div>\n    );\n  };\n\n  // Render health data collection form\n  const renderHealthForm = () => {\n    return (\n      <div className=\"health-form-container\">\n        <form onSubmit={handleHealthFormSubmit} className=\"health-form\">\n          <div className=\"form-section\">\n            <h3>Personal Information</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Full Name</label>\n                <input \n                  type=\"text\" \n                  id=\"name\" \n                  name=\"name\" \n                  value={healthForm.name} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"age\">Age</label>\n                <input \n                  type=\"number\" \n                  id=\"age\" \n                  name=\"age\" \n                  min=\"1\" \n                  max=\"120\" \n                  value={healthForm.age} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"gender\">Gender</label>\n                <select \n                  id=\"gender\" \n                  name=\"gender\" \n                  value={healthForm.gender} \n                  onChange={(e) => handleInputChange(e, 'health')}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"bloodType\">Blood Type</label>\n                <select \n                  id=\"bloodType\" \n                  name=\"bloodType\" \n                  value={healthForm.bloodType} \n                  onChange={(e) => handleInputChange(e, 'health')}\n                >\n                  <option value=\"A+\">A+</option>\n                  <option value=\"A-\">A-</option>\n                  <option value=\"B+\">B+</option>\n                  <option value=\"B-\">B-</option>\n                  <option value=\"AB+\">AB+</option>\n                  <option value=\"AB-\">AB-</option>\n                  <option value=\"O+\">O+</option>\n                  <option value=\"O-\">O-</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"form-section\">\n            <h3>Body Measurements</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"height\">Height (cm)</label>\n                <input \n                  type=\"number\" \n                  id=\"height\" \n                  name=\"height\" \n                  min=\"50\" \n                  max=\"250\" \n                  value={healthForm.height} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"weight\">Weight (kg)</label>\n                <input \n                  type=\"number\" \n                  id=\"weight\" \n                  name=\"weight\" \n                  min=\"1\" \n                  max=\"300\" \n                  step=\"0.1\" \n                  value={healthForm.weight} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"form-section\">\n            <h3>Health Indicators</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"bloodPressure\">Blood Pressure (systolic/diastolic)</label>\n                <input \n                  type=\"text\" \n                  id=\"bloodPressure\" \n                  name=\"bloodPressure\" \n                  placeholder=\"120/80\" \n                  value={healthForm.bloodPressure} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"glucose\">Glucose (mg/dL)</label>\n                <input \n                  type=\"number\" \n                  id=\"glucose\" \n                  name=\"glucose\" \n                  min=\"50\" \n                  max=\"300\" \n                  value={healthForm.glucose} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"cholesterol\">Cholesterol (mg/dL)</label>\n                <input \n                  type=\"number\" \n                  id=\"cholesterol\" \n                  name=\"cholesterol\" \n                  min=\"50\" \n                  max=\"300\" \n                  value={healthForm.cholesterol} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                  required \n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"form-section\">\n            <h3>Medical History</h3>\n            <div className=\"form-group\">\n              <label htmlFor=\"allergies\">Allergies (comma separated)</label>\n              <input \n                type=\"text\" \n                id=\"allergies\" \n                name=\"allergies\" \n                placeholder=\"Peanuts, Penicillin, etc.\" \n                value={healthForm.allergies} \n                onChange={(e) => handleInputChange(e, 'health')} \n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"conditions\">Medical Conditions (comma separated)</label>\n              <input \n                type=\"text\" \n                id=\"conditions\" \n                name=\"conditions\" \n                placeholder=\"Hypertension, Asthma, etc.\" \n                value={healthForm.conditions} \n                onChange={(e) => handleInputChange(e, 'health')} \n              />\n            </div>\n          </div>\n          \n          <button type=\"submit\" className=\"submit-button\">Generate Health Profile</button>\n        </form>\n      </div>\n    );\n  };\n\n  // Render profile with the collected data\n  const renderProfile = () => {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"profile-header\">\n          <div className=\"profile-avatar\">\n            <i className=\"fas fa-user-circle\"></i>\n          </div>\n          <div className=\"profile-info\">\n            <h3>{userData.name}</h3>\n            <p>{userData.age} years • {userData.gender} • {userData.bloodType}</p>\n          </div>\n        </div>\n        \n        <div className=\"profile-tabs\">\n          <button \n            className={activeTab === 'overview' ? 'active' : ''} \n            onClick={() => setActiveTab('overview')}\n          >\n            Overview\n          </button>\n          <button \n            className={activeTab === 'predictions' ? 'active' : ''} \n            onClick={() => setActiveTab('predictions')}\n          >\n            Risk Predictions\n          </button>\n          <button \n            className={activeTab === 'trends' ? 'active' : ''} \n            onClick={() => setActiveTab('trends')}\n          >\n            Health Trends\n          </button>\n        </div>\n        \n        <div className=\"profile-content\">\n          {activeTab === 'overview' && (\n            <div className=\"overview-tab\">\n              <div className=\"metrics-grid\">\n                <div className=\"metric-card\">\n                  <h4>Height</h4>\n                  <p>{userData.height} cm</p>\n                </div>\n                <div className=\"metric-card\">\n                  <h4>Weight</h4>\n                  <p>{userData.weight} kg</p>\n                </div>\n                <div className=\"metric-card\">\n                  <h4>BMI</h4>\n                  <p>{userData.bmi}</p>\n                </div>\n                <div className=\"metric-card\">\n                  <h4>Blood Type</h4>\n                  <p>{userData.bloodType}</p>\n                </div>\n              </div>\n              \n              <div className=\"metrics-grid\">\n                <div className=\"metric-card\">\n                  <h4>Blood Pressure</h4>\n                  <p>{userData.bloodPressure}</p>\n                </div>\n                <div className=\"metric-card\">\n                  <h4>Glucose</h4>\n                  <p>{userData.glucose} mg/dL</p>\n                </div>\n                <div className=\"metric-card\">\n                  <h4>Cholesterol</h4>\n                  <p>{userData.cholesterol} mg/dL</p>\n                </div>\n              </div>\n              \n              <div className=\"health-section\">\n                <h4>Allergies</h4>\n                {userData.allergies.length > 0 ? (\n                  <ul className=\"tag-list\">\n                    {userData.allergies.map((allergy, index) => (\n                      <li key={index} className=\"tag\">{allergy}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>No allergies reported</p>\n                )}\n              </div>\n              \n              <div className=\"health-section\">\n                <h4>Medical Conditions</h4>\n                {userData.conditions.length > 0 ? (\n                  <ul className=\"tag-list\">\n                    {userData.conditions.map((condition, index) => (\n                      <li key={index} className=\"tag\">{condition}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>No medical conditions reported</p>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'predictions' && (\n            <div className=\"predictions-tab\">\n              <h3>Your Health Risk Predictions</h3>\n              <div className=\"predictions-list\">\n                {userData.predictions.map((prediction, index) => (\n                  <div key={index} className=\"prediction-card\">\n                    <div className=\"prediction-date\">{prediction.date}</div>\n                    <div className=\"prediction-risk\">{prediction.risk}</div>\n                    <div className=\"risk-meter\">\n                      <div \n                        className=\"risk-level\" \n                        style={{\n                          width: `${prediction.score}%`,\n                          backgroundColor: prediction.score < 30 ? '#2ecc71' : \n                                          prediction.score < 70 ? '#f39c12' : '#e74c3c'\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'trends' && (\n            <div className=\"trends-tab\">\n              <h3>Your Health Trends</h3>\n              \n              <div className=\"trend-section\">\n                <h4>Blood Pressure</h4>\n                <div className=\"trend-data\">\n                  {userData.trends.bloodPressure.map((item, index) => (\n                    <div key={index} className=\"trend-point\">\n                      <div className=\"trend-date\">{item.date}</div>\n                      <div className=\"trend-value\">{item.value}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"trend-section\">\n                <h4>Weight</h4>\n                <div className=\"trend-data\">\n                  {userData.trends.weight.map((item, index) => (\n                    <div key={index} className=\"trend-point\">\n                      <div className=\"trend-date\">{item.date}</div>\n                      <div className=\"trend-value\">{item.value}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <section id=\"profiles\" className=\"health-profiles\">\n      <h2>User Health Profiles</h2>\n      <p className=\"section-description\">\n        Secure health records and prediction history for each user, offering insights and trend analysis over time.\n      </p>\n      \n      {step === 'login' && renderLogin()}\n      {step === 'collect-data' && renderHealthForm()}\n      {step === 'display-profile' && userData && renderProfile()}\n    </section>\n  );\n}\n\nexport default HealthProfiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}