{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHUSHAN NAVSAGAR\\\\OneDrive\\\\Desktop\\\\Dr.Aarogya AI\\\\frontend\\\\src\\\\components\\\\SymptomChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SymptomChecker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SymptomChecker({\n  isOpen,\n  onClose\n}) {\n  _s();\n  const [step, setStep] = useState('symptoms');\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const [results, setResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Common symptoms list\n  const commonSymptoms = [{\n    id: 1,\n    name: 'Fever',\n    category: 'General'\n  }, {\n    id: 2,\n    name: 'Headache',\n    category: 'Head'\n  }, {\n    id: 3,\n    name: 'Cough',\n    category: 'Respiratory'\n  }, {\n    id: 4,\n    name: 'Sore Throat',\n    category: 'Respiratory'\n  }, {\n    id: 5,\n    name: 'Fatigue',\n    category: 'General'\n  }, {\n    id: 6,\n    name: 'Shortness of Breath',\n    category: 'Respiratory'\n  }, {\n    id: 7,\n    name: 'Chest Pain',\n    category: 'Chest'\n  }, {\n    id: 8,\n    name: 'Abdominal Pain',\n    category: 'Abdominal'\n  }, {\n    id: 9,\n    name: 'Nausea',\n    category: 'Digestive'\n  }, {\n    id: 10,\n    name: 'Vomiting',\n    category: 'Digestive'\n  }, {\n    id: 11,\n    name: 'Diarrhea',\n    category: 'Digestive'\n  }, {\n    id: 12,\n    name: 'Constipation',\n    category: 'Digestive'\n  }, {\n    id: 13,\n    name: 'Dizziness',\n    category: 'Neurological'\n  }, {\n    id: 14,\n    name: 'Rash',\n    category: 'Skin'\n  }, {\n    id: 15,\n    name: 'Joint Pain',\n    category: 'Musculoskeletal'\n  }, {\n    id: 16,\n    name: 'Muscle Pain',\n    category: 'Musculoskeletal'\n  }, {\n    id: 17,\n    name: 'Back Pain',\n    category: 'Musculoskeletal'\n  }, {\n    id: 18,\n    name: 'Runny Nose',\n    category: 'Respiratory'\n  }, {\n    id: 19,\n    name: 'Nasal Congestion',\n    category: 'Respiratory'\n  }, {\n    id: 20,\n    name: 'Sneezing',\n    category: 'Respiratory'\n  }];\n\n  // Predefined conditions based on symptom combinations\n  const conditions = {\n    'Common Cold': {\n      symptoms: ['Cough', 'Sore Throat', 'Runny Nose', 'Nasal Congestion', 'Sneezing'],\n      description: 'A viral infection of the upper respiratory tract.',\n      severity: 'Mild',\n      recommendations: ['Rest and stay hydrated', 'Over-the-counter cold medications may help relieve symptoms', 'Use a humidifier to ease congestion', 'Consult a doctor if symptoms persist beyond 10 days']\n    },\n    'Influenza (Flu)': {\n      symptoms: ['Fever', 'Headache', 'Fatigue', 'Cough', 'Sore Throat', 'Muscle Pain'],\n      description: 'A contagious respiratory illness caused by influenza viruses.',\n      severity: 'Moderate',\n      recommendations: ['Rest and stay hydrated', 'Take over-the-counter pain relievers for fever and aches', 'Stay home to avoid spreading the virus', 'Consult a doctor if symptoms are severe or you are in a high-risk group']\n    },\n    'COVID-19': {\n      symptoms: ['Fever', 'Cough', 'Shortness of Breath', 'Fatigue', 'Headache', 'Sore Throat', 'Loss of Taste or Smell'],\n      description: 'A respiratory illness caused by the SARS-CoV-2 virus.',\n      severity: 'Moderate to Severe',\n      recommendations: ['Get tested for COVID-19', 'Isolate yourself from others', 'Monitor your symptoms closely', 'Seek immediate medical attention if you experience severe symptoms']\n    },\n    'Gastroenteritis': {\n      symptoms: ['Nausea', 'Vomiting', 'Diarrhea', 'Abdominal Pain'],\n      description: 'Inflammation of the stomach and intestines, typically resulting from a viral or bacterial infection.',\n      severity: 'Mild to Moderate',\n      recommendations: ['Stay hydrated with clear fluids', 'Eat bland, easy-to-digest foods when you can tolerate them', 'Rest and avoid dairy products', 'Seek medical attention if symptoms persist beyond 3 days or if you become dehydrated']\n    },\n    'Migraine': {\n      symptoms: ['Headache', 'Nausea', 'Dizziness'],\n      description: 'A neurological condition characterized by severe, recurring headaches.',\n      severity: 'Moderate',\n      recommendations: ['Rest in a quiet, dark room', 'Apply cold compresses to your forehead', 'Take over-the-counter pain relievers', 'Consult a doctor for recurring migraines']\n    },\n    'Allergic Reaction': {\n      symptoms: ['Rash', 'Sneezing', 'Runny Nose', 'Nasal Congestion'],\n      description: 'An immune system response to a substance that the body mistakenly identifies as harmful.',\n      severity: 'Mild to Severe',\n      recommendations: ['Avoid the allergen if known', 'Take antihistamines for mild symptoms', 'Seek immediate medical attention for severe reactions, especially if breathing is affected']\n    }\n  };\n  const toggleSymptom = symptom => {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter(s => s !== symptom));\n    } else {\n      setSelectedSymptoms([...selectedSymptoms, symptom]);\n    }\n  };\n  const analyzeSymptoms = () => {\n    if (selectedSymptoms.length === 0) {\n      alert('Please select at least one symptom');\n      return;\n    }\n\n    // Calculate potential conditions based on selected symptoms\n    const potentialConditions = [];\n    for (const [condition, data] of Object.entries(conditions)) {\n      // Count how many symptoms match\n      const matchingSymptoms = selectedSymptoms.filter(s => data.symptoms.includes(s));\n\n      // Calculate match percentage\n      const matchPercentage = matchingSymptoms.length / data.symptoms.length * 100;\n\n      // If at least 40% of the condition's symptoms are present, consider it\n      if (matchPercentage >= 40) {\n        potentialConditions.push({\n          name: condition,\n          matchPercentage: Math.round(matchPercentage),\n          ...data\n        });\n      }\n    }\n\n    // Sort by match percentage (highest first)\n    potentialConditions.sort((a, b) => b.matchPercentage - a.matchPercentage);\n    setResults({\n      conditions: potentialConditions,\n      selectedSymptoms\n    });\n    setStep('results');\n  };\n  const resetChecker = () => {\n    setSelectedSymptoms([]);\n    setResults(null);\n    setStep('symptoms');\n    setSearchTerm('');\n  };\n  const filteredSymptoms = commonSymptoms.filter(symptom => symptom.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Group symptoms by category\n  const groupedSymptoms = {};\n  filteredSymptoms.forEach(symptom => {\n    if (!groupedSymptoms[symptom.category]) {\n      groupedSymptoms[symptom.category] = [];\n    }\n    groupedSymptoms[symptom.category].push(symptom);\n  });\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-checker-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symptom-checker-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symptom-checker-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Symptom Checker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), step === 'symptoms' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symptom-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: \"Select all symptoms you're experiencing:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search symptoms...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"symptom-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-symptoms\",\n          children: selectedSymptoms.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Selected Symptoms:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-symptoms-list\",\n              children: selectedSymptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-symptom\",\n                children: [symptom, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleSymptom(symptom),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this)]\n              }, symptom, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-symptoms\",\n            children: \"No symptoms selected yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symptoms-list\",\n          children: Object.entries(groupedSymptoms).map(([category, symptoms]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"symptom-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-symptoms\",\n              children: symptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `symptom-item ${selectedSymptoms.includes(symptom.name) ? 'selected' : ''}`,\n                onClick: () => toggleSymptom(symptom.name),\n                children: symptom.name\n              }, symptom.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"analyze-button\",\n            onClick: analyzeSymptoms,\n            disabled: selectedSymptoms.length === 0,\n            children: \"Analyze Symptoms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), step === 'results' && results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symptoms-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Based on your symptoms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-symptoms-list\",\n            children: results.selectedSymptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-symptom\",\n              children: symptom\n            }, symptom, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), results.conditions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potential-conditions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Potential Conditions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), results.conditions.map((condition, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: condition.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-percentage\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"percentage-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"percentage-fill\",\n                    style: {\n                      width: `${condition.matchPercentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [condition.matchPercentage, \"% match\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"condition-description\",\n                children: condition.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"condition-severity\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Severity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this), \" \", condition.severity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recommendations\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Recommendations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: condition.recommendations.map((rec, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: rec\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-matches\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No potential conditions match your symptoms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please consult with a healthcare professional for proper diagnosis.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Disclaimer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 18\n            }, this), \" This symptom checker provides general information only and should not be used for diagnosis or treatment decisions. Always consult with a qualified healthcare provider.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: resetChecker,\n            children: \"Check Different Symptoms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomChecker, \"WL39Soc3SUpRXuranuJ324ahdg4=\");\n_c = SymptomChecker;\nexport default SymptomChecker;\nvar _c;\n$RefreshReg$(_c, \"SymptomChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SymptomChecker","isOpen","onClose","_s","step","setStep","selectedSymptoms","setSelectedSymptoms","results","setResults","searchTerm","setSearchTerm","commonSymptoms","id","name","category","conditions","symptoms","description","severity","recommendations","toggleSymptom","symptom","includes","filter","s","analyzeSymptoms","length","alert","potentialConditions","condition","data","Object","entries","matchingSymptoms","matchPercentage","push","Math","round","sort","a","b","resetChecker","filteredSymptoms","toLowerCase","groupedSymptoms","forEach","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","disabled","index","style","width","rec","i","_c","$RefreshReg$"],"sources":["C:/Users/BHUSHAN NAVSAGAR/OneDrive/Desktop/Dr.Aarogya AI/frontend/src/components/SymptomChecker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SymptomChecker.css';\n\nfunction SymptomChecker({ isOpen, onClose }) {\n  const [step, setStep] = useState('symptoms');\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const [results, setResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Common symptoms list\n  const commonSymptoms = [\n    { id: 1, name: 'Fever', category: 'General' },\n    { id: 2, name: 'Headache', category: 'Head' },\n    { id: 3, name: 'Cough', category: 'Respiratory' },\n    { id: 4, name: 'Sore Throat', category: 'Respiratory' },\n    { id: 5, name: 'Fatigue', category: 'General' },\n    { id: 6, name: 'Shortness of Breath', category: 'Respiratory' },\n    { id: 7, name: 'Chest Pain', category: 'Chest' },\n    { id: 8, name: 'Abdominal Pain', category: 'Abdominal' },\n    { id: 9, name: 'Nausea', category: 'Digestive' },\n    { id: 10, name: 'Vomiting', category: 'Digestive' },\n    { id: 11, name: 'Diarrhea', category: 'Digestive' },\n    { id: 12, name: 'Constipation', category: 'Digestive' },\n    { id: 13, name: 'Dizziness', category: 'Neurological' },\n    { id: 14, name: 'Rash', category: 'Skin' },\n    { id: 15, name: 'Joint Pain', category: 'Musculoskeletal' },\n    { id: 16, name: 'Muscle Pain', category: 'Musculoskeletal' },\n    { id: 17, name: 'Back Pain', category: 'Musculoskeletal' },\n    { id: 18, name: 'Runny Nose', category: 'Respiratory' },\n    { id: 19, name: 'Nasal Congestion', category: 'Respiratory' },\n    { id: 20, name: 'Sneezing', category: 'Respiratory' }\n  ];\n\n  // Predefined conditions based on symptom combinations\n  const conditions = {\n    'Common Cold': {\n      symptoms: ['Cough', 'Sore Throat', 'Runny Nose', 'Nasal Congestion', 'Sneezing'],\n      description: 'A viral infection of the upper respiratory tract.',\n      severity: 'Mild',\n      recommendations: [\n        'Rest and stay hydrated',\n        'Over-the-counter cold medications may help relieve symptoms',\n        'Use a humidifier to ease congestion',\n        'Consult a doctor if symptoms persist beyond 10 days'\n      ]\n    },\n    'Influenza (Flu)': {\n      symptoms: ['Fever', 'Headache', 'Fatigue', 'Cough', 'Sore Throat', 'Muscle Pain'],\n      description: 'A contagious respiratory illness caused by influenza viruses.',\n      severity: 'Moderate',\n      recommendations: [\n        'Rest and stay hydrated',\n        'Take over-the-counter pain relievers for fever and aches',\n        'Stay home to avoid spreading the virus',\n        'Consult a doctor if symptoms are severe or you are in a high-risk group'\n      ]\n    },\n    'COVID-19': {\n      symptoms: ['Fever', 'Cough', 'Shortness of Breath', 'Fatigue', 'Headache', 'Sore Throat', 'Loss of Taste or Smell'],\n      description: 'A respiratory illness caused by the SARS-CoV-2 virus.',\n      severity: 'Moderate to Severe',\n      recommendations: [\n        'Get tested for COVID-19',\n        'Isolate yourself from others',\n        'Monitor your symptoms closely',\n        'Seek immediate medical attention if you experience severe symptoms'\n      ]\n    },\n    'Gastroenteritis': {\n      symptoms: ['Nausea', 'Vomiting', 'Diarrhea', 'Abdominal Pain'],\n      description: 'Inflammation of the stomach and intestines, typically resulting from a viral or bacterial infection.',\n      severity: 'Mild to Moderate',\n      recommendations: [\n        'Stay hydrated with clear fluids',\n        'Eat bland, easy-to-digest foods when you can tolerate them',\n        'Rest and avoid dairy products',\n        'Seek medical attention if symptoms persist beyond 3 days or if you become dehydrated'\n      ]\n    },\n    'Migraine': {\n      symptoms: ['Headache', 'Nausea', 'Dizziness'],\n      description: 'A neurological condition characterized by severe, recurring headaches.',\n      severity: 'Moderate',\n      recommendations: [\n        'Rest in a quiet, dark room',\n        'Apply cold compresses to your forehead',\n        'Take over-the-counter pain relievers',\n        'Consult a doctor for recurring migraines'\n      ]\n    },\n    'Allergic Reaction': {\n      symptoms: ['Rash', 'Sneezing', 'Runny Nose', 'Nasal Congestion'],\n      description: 'An immune system response to a substance that the body mistakenly identifies as harmful.',\n      severity: 'Mild to Severe',\n      recommendations: [\n        'Avoid the allergen if known',\n        'Take antihistamines for mild symptoms',\n        'Seek immediate medical attention for severe reactions, especially if breathing is affected'\n      ]\n    }\n  };\n\n  const toggleSymptom = (symptom) => {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter(s => s !== symptom));\n    } else {\n      setSelectedSymptoms([...selectedSymptoms, symptom]);\n    }\n  };\n\n  const analyzeSymptoms = () => {\n    if (selectedSymptoms.length === 0) {\n      alert('Please select at least one symptom');\n      return;\n    }\n\n    // Calculate potential conditions based on selected symptoms\n    const potentialConditions = [];\n    \n    for (const [condition, data] of Object.entries(conditions)) {\n      // Count how many symptoms match\n      const matchingSymptoms = selectedSymptoms.filter(s => \n        data.symptoms.includes(s)\n      );\n      \n      // Calculate match percentage\n      const matchPercentage = (matchingSymptoms.length / data.symptoms.length) * 100;\n      \n      // If at least 40% of the condition's symptoms are present, consider it\n      if (matchPercentage >= 40) {\n        potentialConditions.push({\n          name: condition,\n          matchPercentage: Math.round(matchPercentage),\n          ...data\n        });\n      }\n    }\n    \n    // Sort by match percentage (highest first)\n    potentialConditions.sort((a, b) => b.matchPercentage - a.matchPercentage);\n    \n    setResults({\n      conditions: potentialConditions,\n      selectedSymptoms\n    });\n    \n    setStep('results');\n  };\n\n  const resetChecker = () => {\n    setSelectedSymptoms([]);\n    setResults(null);\n    setStep('symptoms');\n    setSearchTerm('');\n  };\n\n  const filteredSymptoms = commonSymptoms.filter(symptom => \n    symptom.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Group symptoms by category\n  const groupedSymptoms = {};\n  filteredSymptoms.forEach(symptom => {\n    if (!groupedSymptoms[symptom.category]) {\n      groupedSymptoms[symptom.category] = [];\n    }\n    groupedSymptoms[symptom.category].push(symptom);\n  });\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"symptom-checker-overlay\">\n      <div className=\"symptom-checker-container\">\n        <div className=\"symptom-checker-header\">\n          <h2>Symptom Checker</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        {step === 'symptoms' && (\n          <div className=\"symptom-selection\">\n            <p className=\"instruction\">Select all symptoms you're experiencing:</p>\n            \n            <div className=\"search-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Search symptoms...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"symptom-search\"\n              />\n            </div>\n            \n            <div className=\"selected-symptoms\">\n              {selectedSymptoms.length > 0 ? (\n                <>\n                  <h3>Selected Symptoms:</h3>\n                  <div className=\"selected-symptoms-list\">\n                    {selectedSymptoms.map(symptom => (\n                      <div key={symptom} className=\"selected-symptom\">\n                        {symptom}\n                        <button onClick={() => toggleSymptom(symptom)}>×</button>\n                      </div>\n                    ))}\n                  </div>\n                </>\n              ) : (\n                <p className=\"no-symptoms\">No symptoms selected yet</p>\n              )}\n            </div>\n            \n            <div className=\"symptoms-list\">\n              {Object.entries(groupedSymptoms).map(([category, symptoms]) => (\n                <div key={category} className=\"symptom-category\">\n                  <h3>{category}</h3>\n                  <div className=\"category-symptoms\">\n                    {symptoms.map(symptom => (\n                      <div\n                        key={symptom.id}\n                        className={`symptom-item ${selectedSymptoms.includes(symptom.name) ? 'selected' : ''}`}\n                        onClick={() => toggleSymptom(symptom.name)}\n                      >\n                        {symptom.name}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"action-buttons\">\n              <button \n                className=\"analyze-button\"\n                onClick={analyzeSymptoms}\n                disabled={selectedSymptoms.length === 0}\n              >\n                Analyze Symptoms\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {step === 'results' && results && (\n          <div className=\"results-container\">\n            <h3>Analysis Results</h3>\n            \n            <div className=\"symptoms-summary\">\n              <h4>Based on your symptoms:</h4>\n              <div className=\"selected-symptoms-list\">\n                {results.selectedSymptoms.map(symptom => (\n                  <div key={symptom} className=\"selected-symptom\">\n                    {symptom}\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {results.conditions.length > 0 ? (\n              <div className=\"potential-conditions\">\n                <h4>Potential Conditions:</h4>\n                \n                {results.conditions.map((condition, index) => (\n                  <div key={index} className=\"condition-card\">\n                    <div className=\"condition-header\">\n                      <h3>{condition.name}</h3>\n                      <div className=\"match-percentage\">\n                        <div className=\"percentage-bar\">\n                          <div \n                            className=\"percentage-fill\"\n                            style={{ width: `${condition.matchPercentage}%` }}\n                          ></div>\n                        </div>\n                        <span>{condition.matchPercentage}% match</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"condition-details\">\n                      <p className=\"condition-description\">{condition.description}</p>\n                      <p className=\"condition-severity\">\n                        <strong>Severity:</strong> {condition.severity}\n                      </p>\n                      \n                      <div className=\"recommendations\">\n                        <h4>Recommendations:</h4>\n                        <ul>\n                          {condition.recommendations.map((rec, i) => (\n                            <li key={i}>{rec}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-matches\">\n                <p>No potential conditions match your symptoms.</p>\n                <p>Please consult with a healthcare professional for proper diagnosis.</p>\n              </div>\n            )}\n            \n            <div className=\"disclaimer\">\n              <p><strong>Disclaimer:</strong> This symptom checker provides general information only and should not be used for diagnosis or treatment decisions. Always consult with a qualified healthcare provider.</p>\n            </div>\n            \n            <div className=\"action-buttons\">\n              <button className=\"reset-button\" onClick={resetChecker}>\n                Check Different Symptoms\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SymptomChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}