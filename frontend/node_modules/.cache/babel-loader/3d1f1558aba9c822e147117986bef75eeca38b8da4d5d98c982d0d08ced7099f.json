{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHUSHAN NAVSAGAR\\\\OneDrive\\\\Desktop\\\\Dr.Aarogya AI\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot({\n  isOpen,\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I'm Dr. Aarogya AI. How can I help you today?\",\n    sender: 'bot'\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const generateResponse = userInput => {\n    const input = userInput.toLowerCase();\n\n    // Check for greetings\n    if (input.match(/hello|hi|hey|greetings/)) {\n      return \"Hello! How can I help with your health concerns today?\";\n    }\n\n    // Check for common symptoms\n    if (input.includes(\"headache\")) {\n      return \"Headaches can be caused by various factors including stress, dehydration, or eye strain. If it's severe or persistent, you should consult a doctor.\";\n    }\n    if (input.includes(\"fever\")) {\n      return \"Fever is often a sign that your body is fighting an infection. Rest, stay hydrated, and take over-the-counter fever reducers if needed. Consult a doctor if it persists over 3 days or exceeds 103°F (39.4°C).\";\n    }\n    if (input.includes(\"cough\")) {\n      return \"A cough could be due to a cold, allergies, or other respiratory conditions. Stay hydrated and consider honey for soothing. If it persists for more than a week, consult a healthcare provider.\";\n    }\n    if (input.includes(\"pain\")) {\n      return \"Pain can have many causes. Could you describe where you're experiencing pain and its intensity?\";\n    }\n    if (input.includes(\"tired\") || input.includes(\"fatigue\")) {\n      return \"Fatigue can result from poor sleep, stress, or certain medical conditions. Ensure you're getting enough rest and maintaining a balanced diet.\";\n    }\n    if (input.includes(\"dizzy\") || input.includes(\"dizziness\")) {\n      return \"Dizziness might be caused by dehydration, low blood sugar, or inner ear issues. Try sitting down and drinking water. If it persists, seek medical advice.\";\n    }\n\n    // Check for questions about the service\n    if (input.includes(\"what can you do\") || input.includes(\"how do you work\")) {\n      return \"I can help answer health-related questions, provide information about symptoms, and offer general health advice. However, I'm not a replacement for professional medical care.\";\n    }\n\n    // Default responses\n    const defaultResponses = [\"I understand you're concerned about your health. Could you provide more details about your symptoms?\", \"I'm here to help with health-related questions. Can you tell me more about what you're experiencing?\", \"To better assist you, could you describe your symptoms in more detail?\", \"I'd like to help. Could you rephrase your question about your health concern?\"];\n    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n  };\n  const handleSend = () => {\n    if (input.trim() === '') return;\n\n    // Add user message to chat\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    // Simulate AI response with predefined responses\n    setTimeout(() => {\n      const botResponse = generateResponse(input);\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: 'bot'\n      }]);\n      setIsLoading(false);\n    }, 1000); // Delay for natural feel\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-robot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \" Dr. Aarogya AI Assistant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your health question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: isLoading,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"YZNkv3iPrEDU7DHa2tSD0WUPiu8=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatBot","isOpen","onClose","_s","messages","setMessages","text","sender","input","setInput","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","generateResponse","userInput","toLowerCase","match","includes","defaultResponses","Math","floor","random","length","handleSend","trim","userMessage","prev","setTimeout","botResponse","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BHUSHAN NAVSAGAR/OneDrive/Desktop/Dr.Aarogya AI/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatBot.css';\n\nfunction ChatBot({ isOpen, onClose }) {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! I'm Dr. Aarogya AI. How can I help you today?\", sender: 'bot' }\n  ]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const generateResponse = (userInput) => {\n    const input = userInput.toLowerCase();\n    \n    // Check for greetings\n    if (input.match(/hello|hi|hey|greetings/)) {\n      return \"Hello! How can I help with your health concerns today?\";\n    }\n    \n    // Check for common symptoms\n    if (input.includes(\"headache\")) {\n      return \"Headaches can be caused by various factors including stress, dehydration, or eye strain. If it's severe or persistent, you should consult a doctor.\";\n    }\n    \n    if (input.includes(\"fever\")) {\n      return \"Fever is often a sign that your body is fighting an infection. Rest, stay hydrated, and take over-the-counter fever reducers if needed. Consult a doctor if it persists over 3 days or exceeds 103°F (39.4°C).\";\n    }\n    \n    if (input.includes(\"cough\")) {\n      return \"A cough could be due to a cold, allergies, or other respiratory conditions. Stay hydrated and consider honey for soothing. If it persists for more than a week, consult a healthcare provider.\";\n    }\n    \n    if (input.includes(\"pain\")) {\n      return \"Pain can have many causes. Could you describe where you're experiencing pain and its intensity?\";\n    }\n    \n    if (input.includes(\"tired\") || input.includes(\"fatigue\")) {\n      return \"Fatigue can result from poor sleep, stress, or certain medical conditions. Ensure you're getting enough rest and maintaining a balanced diet.\";\n    }\n    \n    if (input.includes(\"dizzy\") || input.includes(\"dizziness\")) {\n      return \"Dizziness might be caused by dehydration, low blood sugar, or inner ear issues. Try sitting down and drinking water. If it persists, seek medical advice.\";\n    }\n    \n    // Check for questions about the service\n    if (input.includes(\"what can you do\") || input.includes(\"how do you work\")) {\n      return \"I can help answer health-related questions, provide information about symptoms, and offer general health advice. However, I'm not a replacement for professional medical care.\";\n    }\n    \n    // Default responses\n    const defaultResponses = [\n      \"I understand you're concerned about your health. Could you provide more details about your symptoms?\",\n      \"I'm here to help with health-related questions. Can you tell me more about what you're experiencing?\",\n      \"To better assist you, could you describe your symptoms in more detail?\",\n      \"I'd like to help. Could you rephrase your question about your health concern?\"\n    ];\n    \n    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n  };\n\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    \n    // Add user message to chat\n    const userMessage = { text: input, sender: 'user' };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    // Simulate AI response with predefined responses\n    setTimeout(() => {\n      const botResponse = generateResponse(input);\n      setMessages(prev => [...prev, { \n        text: botResponse, \n        sender: 'bot' \n      }]);\n      setIsLoading(false);\n    }, 1000); // Delay for natural feel\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-header\">\n        <h3><i className=\"fas fa-robot\"></i> Dr. Aarogya AI Assistant</h3>\n        <button className=\"close-button\" onClick={onClose}>×</button>\n      </div>\n      \n      <div className=\"chatbot-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message bot loading\">\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chatbot-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type your health question...\"\n        />\n        <button onClick={handleSend} disabled={isLoading}>\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}