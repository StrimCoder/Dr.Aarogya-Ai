{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHUSHAN NAVSAGAR\\\\OneDrive\\\\Desktop\\\\Dr.Aarogya AI\\\\frontend\\\\src\\\\components\\\\HealthProfiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './HealthProfiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HealthProfiles() {\n  _s();\n  const [step, setStep] = useState('login');\n  const [userData, setUserData] = useState(null);\n\n  // Form states\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [healthForm, setHealthForm] = useState({\n    name: '',\n    age: '',\n    gender: 'Male',\n    height: '',\n    weight: '',\n    bloodType: 'O+',\n    allergies: '',\n    conditions: '',\n    bloodPressure: '',\n    cholesterol: '',\n    glucose: ''\n  });\n  const handleLogin = e => {\n    e.preventDefault();\n    // In a real app, this would authenticate with a backend\n    setStep('collect-data');\n  };\n  const handleHealthFormSubmit = e => {\n    e.preventDefault();\n\n    // Process the form data\n    const processedData = {\n      ...healthForm,\n      bmi: calculateBMI(healthForm.height, healthForm.weight),\n      allergies: healthForm.allergies.split(',').map(item => item.trim()).filter(item => item),\n      conditions: healthForm.conditions.split(',').map(item => item.trim()).filter(item => item),\n      // Generate predictions based on input data\n      predictions: generatePredictions(healthForm),\n      // Generate trends\n      trends: {\n        bloodPressure: generateTrends('bloodPressure', healthForm.bloodPressure),\n        weight: generateTrends('weight', healthForm.weight)\n      }\n    };\n    setUserData(processedData);\n    setStep('display-profile');\n  };\n  const calculateBMI = (height, weight) => {\n    // Height in cm, weight in kg\n    const heightInMeters = parseFloat(height) / 100;\n    const weightInKg = parseFloat(weight);\n    if (isNaN(heightInMeters) || isNaN(weightInKg) || heightInMeters === 0) {\n      return \"N/A\";\n    }\n    const bmi = (weightInKg / (heightInMeters * heightInMeters)).toFixed(1);\n    return bmi;\n  };\n  const generatePredictions = formData => {\n    // This is a simplified mock prediction generator\n    // In a real app, this would use ML models or API calls\n\n    const predictions = [];\n    const today = new Date();\n\n    // Cardiovascular risk based on age, blood pressure\n    const age = parseInt(formData.age);\n    const bp = formData.bloodPressure.split('/');\n    const systolic = bp[0] ? parseInt(bp[0]) : 120;\n    const diastolic = bp[1] ? parseInt(bp[1]) : 80;\n    let cvRiskScore = 0;\n    if (age > 50) cvRiskScore += 15;\n    if (age > 60) cvRiskScore += 10;\n    if (systolic > 140 || diastolic > 90) cvRiskScore += 25;\n    predictions.push({\n      date: today.toISOString().split('T')[0],\n      risk: `${cvRiskScore > 30 ? 'Moderate' : 'Low'} risk of cardiovascular disease`,\n      score: cvRiskScore\n    });\n\n    // Diabetes risk based on weight, age, glucose\n    let diabetesRiskScore = 0;\n    const bmi = calculateBMI(formData.height, formData.weight);\n    const glucose = parseInt(formData.glucose) || 100;\n    if (bmi > 25) diabetesRiskScore += 15;\n    if (bmi > 30) diabetesRiskScore += 15;\n    if (age > 45) diabetesRiskScore += 10;\n    if (glucose > 100) diabetesRiskScore += 20;\n    const lastMonth = new Date();\n    lastMonth.setMonth(today.getMonth() - 1);\n    predictions.push({\n      date: lastMonth.toISOString().split('T')[0],\n      risk: `${diabetesRiskScore > 30 ? 'Moderate' : 'Low'} risk of type 2 diabetes`,\n      score: diabetesRiskScore\n    });\n    return predictions;\n  };\n  const generateTrends = (type, currentValue) => {\n    // Generate mock trend data based on current value\n    const today = new Date();\n    const trends = [];\n\n    // Add current value\n    trends.push({\n      date: today.toISOString().split('T')[0],\n      value: type === 'bloodPressure' ? currentValue : `${currentValue} kg`\n    });\n\n    // Add previous values with slight variations\n    for (let i = 1; i <= 2; i++) {\n      const prevDate = new Date();\n      prevDate.setMonth(today.getMonth() - i);\n      if (type === 'bloodPressure') {\n        const bp = currentValue.split('/');\n        const systolic = parseInt(bp[0]) || 120;\n        const diastolic = parseInt(bp[1]) || 80;\n\n        // Add small random variations\n        const systolicVar = systolic + Math.floor(Math.random() * 6) - 3;\n        const diastolicVar = diastolic + Math.floor(Math.random() * 4) - 2;\n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${systolicVar}/${diastolicVar}`\n        });\n      } else if (type === 'weight') {\n        const weight = parseFloat(currentValue);\n        // Add small random variations to weight\n        const weightVar = (weight + (Math.random() * 2 - 1)).toFixed(1);\n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${weightVar} kg`\n        });\n      }\n    }\n    return trends;\n  };\n  const handleInputChange = (e, formType) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formType === 'login') {\n      setLoginForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (formType === 'health') {\n      setHealthForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Login screen\n  if (step === 'login') {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"profiles\",\n      className: \"health-profiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Health Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-description\",\n        children: \"Secure health records and prediction history for each user, offering insights and trend analysis over time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login to Access Your Health Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: loginForm.email,\n              onChange: e => handleInputChange(e, 'login'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: loginForm.password,\n              onChange: e => handleInputChange(e, 'login'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-button\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-help\",\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#signup\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 36\n          }, this), \" | \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#forgot\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Data collection form\n  if (step === 'collect-data') {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"profiles\",\n      className: \"health-profiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Complete Your Health Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-description\",\n        children: \"Please provide your health information to generate personalized insights and predictions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"health-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleHealthFormSubmit,\n          className: \"health-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Personal Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"name\",\n                  value: healthForm.name,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"age\",\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"age\",\n                  name: \"age\",\n                  min: \"1\",\n                  max: \"120\",\n                  value: healthForm.age,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"gender\",\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"gender\",\n                  name: \"gender\",\n                  value: healthForm.gender,\n                  onChange: e => handleInputChange(e, 'health'),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"bloodType\",\n                  children: \"Blood Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"bloodType\",\n                  name: \"bloodType\",\n                  value: healthForm.bloodType,\n                  onChange: e => handleInputChange(e, 'health'),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"A+\",\n                    children: \"A+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"A-\",\n                    children: \"A-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"B+\",\n                    children: \"B+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"B-\",\n                    children: \"B-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"AB+\",\n                    children: \"AB+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"AB-\",\n                    children: \"AB-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"O+\",\n                    children: \"O+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"O-\",\n                    children: \"O-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Body Measurements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"height\",\n                  children: \"Height (cm)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"height\",\n                  name: \"height\",\n                  min: \"50\",\n                  max: \"250\",\n                  value: healthForm.height,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"weight\",\n                  children: \"Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"weight\",\n                  name: \"weight\",\n                  min: \"1\",\n                  max: \"300\",\n                  step: \"0.1\",\n                  value: healthForm.weight,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Health Indicators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"bloodPressure\",\n                  children: \"Blood Pressure (systolic/diastolic)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"bloodPressure\",\n                  name: \"bloodPressure\",\n                  placeholder: \"120/80\",\n                  value: healthForm.bloodPressure,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"glucose\",\n                  children: \"Glucose (mg/dL)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"glucose\",\n                  name: \"glucose\",\n                  min: \"50\",\n                  max: \"300\",\n                  value: healthForm.glucose,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cholesterol\",\n                  children: \"Cholesterol (mg/dL)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"cholesterol\",\n                  name: \"cholesterol\",\n                  min: \"50\",\n                  max: \"300\",\n                  value: healthForm.cholesterol,\n                  onChange: e => handleInputChange(e, 'health'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Medical History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"allergies\",\n                children: \"Allergies (comma separated)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"allergies\",\n                name: \"allergies\",\n                placeholder: \"Peanuts, Penicillin, etc.\",\n                value: healthForm.allergies,\n                onChange: e => handleInputChange(e, 'health')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"conditions\",\n                children: \"Medical Conditions (comma separated)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"conditions\",\n                name: \"conditions\",\n                placeholder: \"Hypertension, Asthma, etc.\",\n                value: healthForm.conditions,\n                onChange: e => handleInputChange(e, 'health')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Generate Health Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display profile with the collected data\n  if (step === 'display-profile' && userData) {\n    const [activeTab, setActiveTab] = useState('overview');\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"profiles\",\n      className: \"health-profiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Health Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [userData.age, \" years \\u2022 \", userData.gender, \" \\u2022 \", userData.bloodType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'overview' ? 'active' : '',\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'predictions' ? 'active' : '',\n            onClick: () => setActiveTab('predictions'),\n            children: \"Risk Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'trends' ? 'active' : '',\n            onClick: () => setActiveTab('trends'),\n            children: \"Health Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-content\",\n          children: [activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overview-tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Height\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [userData.height, \" cm\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [userData.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"BMI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: userData.bmi\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Blood Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: userData.bloodType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Blood Pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: userData.bloodPressure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Glucose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [userData.glucose, \" mg/dL\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Cholesterol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [userData.cholesterol, \" mg/dL\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Allergies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this), userData.allergies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"tag-list\",\n                children: userData.allergies.map((allergy, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"tag\",\n                  children: allergy\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No allergies reported\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Medical Conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), userData.conditions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"tag-list\",\n                children: userData.conditions.map((condition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"tag\",\n                  children: condition\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No medical conditions reported\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), activeTab === 'predictions' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"predictions-tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Health Risk Predictions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"predictions-list\",\n              children: userData.predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prediction-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"prediction-date\",\n                  children: prediction.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"prediction-risk\",\n                  children: prediction.risk\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"risk-meter\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"risk-level\",\n                    style: {\n                      width: `${prediction.score}%`,\n                      backgroundColor: prediction.score < 30 ? '#2ecc71' : prediction.score < 70 ? '#f39c12' : '#e74c3c'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), activeTab === 'trends' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trends-tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Health Trends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Blood Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trend-data\",\n                children: userData.trends.bloodPressure.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"trend-date\",\n                    children: item.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"trend-value\",\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trend-data\",\n                children: userData.trends.weight.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trend-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"trend-date\",\n                    children: item.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"trend-value\",\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\n_s(HealthProfiles, \"jlwHMXHvAJleDzvSr2VBArm94/k=\");\n_c = HealthProfiles;\nexport default HealthProfiles;\nvar _c;\n$RefreshReg$(_c, \"HealthProfiles\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HealthProfiles","_s","step","setStep","userData","setUserData","loginForm","setLoginForm","email","password","healthForm","setHealthForm","name","age","gender","height","weight","bloodType","allergies","conditions","bloodPressure","cholesterol","glucose","handleLogin","e","preventDefault","handleHealthFormSubmit","processedData","bmi","calculateBMI","split","map","item","trim","filter","predictions","generatePredictions","trends","generateTrends","heightInMeters","parseFloat","weightInKg","isNaN","toFixed","formData","today","Date","parseInt","bp","systolic","diastolic","cvRiskScore","push","date","toISOString","risk","score","diabetesRiskScore","lastMonth","setMonth","getMonth","type","currentValue","value","i","prevDate","systolicVar","Math","floor","random","diastolicVar","weightVar","handleInputChange","formType","target","prev","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","href","min","max","placeholder","activeTab","setActiveTab","onClick","length","allergy","index","condition","prediction","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/BHUSHAN NAVSAGAR/OneDrive/Desktop/Dr.Aarogya AI/frontend/src/components/HealthProfiles.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './HealthProfiles.css';\n\nfunction HealthProfiles() {\n  const [step, setStep] = useState('login');\n  const [userData, setUserData] = useState(null);\n  \n  // Form states\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  \n  const [healthForm, setHealthForm] = useState({\n    name: '',\n    age: '',\n    gender: 'Male',\n    height: '',\n    weight: '',\n    bloodType: 'O+',\n    allergies: '',\n    conditions: '',\n    bloodPressure: '',\n    cholesterol: '',\n    glucose: ''\n  });\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // In a real app, this would authenticate with a backend\n    setStep('collect-data');\n  };\n\n  const handleHealthFormSubmit = (e) => {\n    e.preventDefault();\n    \n    // Process the form data\n    const processedData = {\n      ...healthForm,\n      bmi: calculateBMI(healthForm.height, healthForm.weight),\n      allergies: healthForm.allergies.split(',').map(item => item.trim()).filter(item => item),\n      conditions: healthForm.conditions.split(',').map(item => item.trim()).filter(item => item),\n      // Generate predictions based on input data\n      predictions: generatePredictions(healthForm),\n      // Generate trends\n      trends: {\n        bloodPressure: generateTrends('bloodPressure', healthForm.bloodPressure),\n        weight: generateTrends('weight', healthForm.weight)\n      }\n    };\n    \n    setUserData(processedData);\n    setStep('display-profile');\n  };\n\n  const calculateBMI = (height, weight) => {\n    // Height in cm, weight in kg\n    const heightInMeters = parseFloat(height) / 100;\n    const weightInKg = parseFloat(weight);\n    \n    if (isNaN(heightInMeters) || isNaN(weightInKg) || heightInMeters === 0) {\n      return \"N/A\";\n    }\n    \n    const bmi = (weightInKg / (heightInMeters * heightInMeters)).toFixed(1);\n    return bmi;\n  };\n\n  const generatePredictions = (formData) => {\n    // This is a simplified mock prediction generator\n    // In a real app, this would use ML models or API calls\n    \n    const predictions = [];\n    const today = new Date();\n    \n    // Cardiovascular risk based on age, blood pressure\n    const age = parseInt(formData.age);\n    const bp = formData.bloodPressure.split('/');\n    const systolic = bp[0] ? parseInt(bp[0]) : 120;\n    const diastolic = bp[1] ? parseInt(bp[1]) : 80;\n    \n    let cvRiskScore = 0;\n    if (age > 50) cvRiskScore += 15;\n    if (age > 60) cvRiskScore += 10;\n    if (systolic > 140 || diastolic > 90) cvRiskScore += 25;\n    \n    predictions.push({\n      date: today.toISOString().split('T')[0],\n      risk: `${cvRiskScore > 30 ? 'Moderate' : 'Low'} risk of cardiovascular disease`,\n      score: cvRiskScore\n    });\n    \n    // Diabetes risk based on weight, age, glucose\n    let diabetesRiskScore = 0;\n    const bmi = calculateBMI(formData.height, formData.weight);\n    const glucose = parseInt(formData.glucose) || 100;\n    \n    if (bmi > 25) diabetesRiskScore += 15;\n    if (bmi > 30) diabetesRiskScore += 15;\n    if (age > 45) diabetesRiskScore += 10;\n    if (glucose > 100) diabetesRiskScore += 20;\n    \n    const lastMonth = new Date();\n    lastMonth.setMonth(today.getMonth() - 1);\n    \n    predictions.push({\n      date: lastMonth.toISOString().split('T')[0],\n      risk: `${diabetesRiskScore > 30 ? 'Moderate' : 'Low'} risk of type 2 diabetes`,\n      score: diabetesRiskScore\n    });\n    \n    return predictions;\n  };\n\n  const generateTrends = (type, currentValue) => {\n    // Generate mock trend data based on current value\n    const today = new Date();\n    const trends = [];\n    \n    // Add current value\n    trends.push({\n      date: today.toISOString().split('T')[0],\n      value: type === 'bloodPressure' ? currentValue : `${currentValue} kg`\n    });\n    \n    // Add previous values with slight variations\n    for (let i = 1; i <= 2; i++) {\n      const prevDate = new Date();\n      prevDate.setMonth(today.getMonth() - i);\n      \n      if (type === 'bloodPressure') {\n        const bp = currentValue.split('/');\n        const systolic = parseInt(bp[0]) || 120;\n        const diastolic = parseInt(bp[1]) || 80;\n        \n        // Add small random variations\n        const systolicVar = systolic + Math.floor(Math.random() * 6) - 3;\n        const diastolicVar = diastolic + Math.floor(Math.random() * 4) - 2;\n        \n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${systolicVar}/${diastolicVar}`\n        });\n      } else if (type === 'weight') {\n        const weight = parseFloat(currentValue);\n        // Add small random variations to weight\n        const weightVar = (weight + (Math.random() * 2 - 1)).toFixed(1);\n        \n        trends.push({\n          date: prevDate.toISOString().split('T')[0],\n          value: `${weightVar} kg`\n        });\n      }\n    }\n    \n    return trends;\n  };\n\n  const handleInputChange = (e, formType) => {\n    const { name, value } = e.target;\n    \n    if (formType === 'login') {\n      setLoginForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (formType === 'health') {\n      setHealthForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Login screen\n  if (step === 'login') {\n    return (\n      <section id=\"profiles\" className=\"health-profiles\">\n        <h2>User Health Profiles</h2>\n        <p className=\"section-description\">\n          Secure health records and prediction history for each user, offering insights and trend analysis over time.\n        </p>\n        \n        <div className=\"login-container\">\n          <h3>Login to Access Your Health Profile</h3>\n          <form onSubmit={handleLogin} className=\"login-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input \n                type=\"email\" \n                id=\"email\" \n                name=\"email\" \n                value={loginForm.email} \n                onChange={(e) => handleInputChange(e, 'login')} \n                required \n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input \n                type=\"password\" \n                id=\"password\" \n                name=\"password\" \n                value={loginForm.password} \n                onChange={(e) => handleInputChange(e, 'login')} \n                required \n              />\n            </div>\n            <button type=\"submit\" className=\"login-button\">Login</button>\n          </form>\n          <p className=\"login-help\">\n            Don't have an account? <a href=\"#signup\">Sign up</a> | <a href=\"#forgot\">Forgot password?</a>\n          </p>\n        </div>\n      </section>\n    );\n  }\n\n  // Data collection form\n  if (step === 'collect-data') {\n    return (\n      <section id=\"profiles\" className=\"health-profiles\">\n        <h2>Complete Your Health Profile</h2>\n        <p className=\"section-description\">\n          Please provide your health information to generate personalized insights and predictions.\n        </p>\n        \n        <div className=\"health-form-container\">\n          <form onSubmit={handleHealthFormSubmit} className=\"health-form\">\n            <div className=\"form-section\">\n              <h3>Personal Information</h3>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Full Name</label>\n                  <input \n                    type=\"text\" \n                    id=\"name\" \n                    name=\"name\" \n                    value={healthForm.name} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"age\">Age</label>\n                  <input \n                    type=\"number\" \n                    id=\"age\" \n                    name=\"age\" \n                    min=\"1\" \n                    max=\"120\" \n                    value={healthForm.age} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n              </div>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"gender\">Gender</label>\n                  <select \n                    id=\"gender\" \n                    name=\"gender\" \n                    value={healthForm.gender} \n                    onChange={(e) => handleInputChange(e, 'health')}\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"bloodType\">Blood Type</label>\n                  <select \n                    id=\"bloodType\" \n                    name=\"bloodType\" \n                    value={healthForm.bloodType} \n                    onChange={(e) => handleInputChange(e, 'health')}\n                  >\n                    <option value=\"A+\">A+</option>\n                    <option value=\"A-\">A-</option>\n                    <option value=\"B+\">B+</option>\n                    <option value=\"B-\">B-</option>\n                    <option value=\"AB+\">AB+</option>\n                    <option value=\"AB-\">AB-</option>\n                    <option value=\"O+\">O+</option>\n                    <option value=\"O-\">O-</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Body Measurements</h3>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"height\">Height (cm)</label>\n                  <input \n                    type=\"number\" \n                    id=\"height\" \n                    name=\"height\" \n                    min=\"50\" \n                    max=\"250\" \n                    value={healthForm.height} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"weight\">Weight (kg)</label>\n                  <input \n                    type=\"number\" \n                    id=\"weight\" \n                    name=\"weight\" \n                    min=\"1\" \n                    max=\"300\" \n                    step=\"0.1\" \n                    value={healthForm.weight} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Health Indicators</h3>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"bloodPressure\">Blood Pressure (systolic/diastolic)</label>\n                  <input \n                    type=\"text\" \n                    id=\"bloodPressure\" \n                    name=\"bloodPressure\" \n                    placeholder=\"120/80\" \n                    value={healthForm.bloodPressure} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"glucose\">Glucose (mg/dL)</label>\n                  <input \n                    type=\"number\" \n                    id=\"glucose\" \n                    name=\"glucose\" \n                    min=\"50\" \n                    max=\"300\" \n                    value={healthForm.glucose} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n              </div>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"cholesterol\">Cholesterol (mg/dL)</label>\n                  <input \n                    type=\"number\" \n                    id=\"cholesterol\" \n                    name=\"cholesterol\" \n                    min=\"50\" \n                    max=\"300\" \n                    value={healthForm.cholesterol} \n                    onChange={(e) => handleInputChange(e, 'health')} \n                    required \n                  />\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Medical History</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"allergies\">Allergies (comma separated)</label>\n                <input \n                  type=\"text\" \n                  id=\"allergies\" \n                  name=\"allergies\" \n                  placeholder=\"Peanuts, Penicillin, etc.\" \n                  value={healthForm.allergies} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"conditions\">Medical Conditions (comma separated)</label>\n                <input \n                  type=\"text\" \n                  id=\"conditions\" \n                  name=\"conditions\" \n                  placeholder=\"Hypertension, Asthma, etc.\" \n                  value={healthForm.conditions} \n                  onChange={(e) => handleInputChange(e, 'health')} \n                />\n              </div>\n            </div>\n            \n            <button type=\"submit\" className=\"submit-button\">Generate Health Profile</button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n\n  // Display profile with the collected data\n  if (step === 'display-profile' && userData) {\n    const [activeTab, setActiveTab] = useState('overview');\n    \n    return (\n      <section id=\"profiles\" className=\"health-profiles\">\n        <h2>Your Health Profile</h2>\n        \n        <div className=\"profile-container\">\n          <div className=\"profile-header\">\n            <div className=\"profile-avatar\">\n              <i className=\"fas fa-user-circle\"></i>\n            </div>\n            <div className=\"profile-info\">\n              <h3>{userData.name}</h3>\n              <p>{userData.age} years • {userData.gender} • {userData.bloodType}</p>\n            </div>\n          </div>\n          \n          <div className=\"profile-tabs\">\n            <button \n              className={activeTab === 'overview' ? 'active' : ''} \n              onClick={() => setActiveTab('overview')}\n            >\n              Overview\n            </button>\n            <button \n              className={activeTab === 'predictions' ? 'active' : ''} \n              onClick={() => setActiveTab('predictions')}\n            >\n              Risk Predictions\n            </button>\n            <button \n              className={activeTab === 'trends' ? 'active' : ''} \n              onClick={() => setActiveTab('trends')}\n            >\n              Health Trends\n            </button>\n          </div>\n          \n          <div className=\"profile-content\">\n            {activeTab === 'overview' && (\n              <div className=\"overview-tab\">\n                <div className=\"metrics-grid\">\n                  <div className=\"metric-card\">\n                    <h4>Height</h4>\n                    <p>{userData.height} cm</p>\n                  </div>\n                  <div className=\"metric-card\">\n                    <h4>Weight</h4>\n                    <p>{userData.weight} kg</p>\n                  </div>\n                  <div className=\"metric-card\">\n                    <h4>BMI</h4>\n                    <p>{userData.bmi}</p>\n                  </div>\n                  <div className=\"metric-card\">\n                    <h4>Blood Type</h4>\n                    <p>{userData.bloodType}</p>\n                  </div>\n                </div>\n                \n                <div className=\"metrics-grid\">\n                  <div className=\"metric-card\">\n                    <h4>Blood Pressure</h4>\n                    <p>{userData.bloodPressure}</p>\n                  </div>\n                  <div className=\"metric-card\">\n                    <h4>Glucose</h4>\n                    <p>{userData.glucose} mg/dL</p>\n                  </div>\n                  <div className=\"metric-card\">\n                    <h4>Cholesterol</h4>\n                    <p>{userData.cholesterol} mg/dL</p>\n                  </div>\n                </div>\n                \n                <div className=\"health-section\">\n                  <h4>Allergies</h4>\n                  {userData.allergies.length > 0 ? (\n                    <ul className=\"tag-list\">\n                      {userData.allergies.map((allergy, index) => (\n                        <li key={index} className=\"tag\">{allergy}</li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p>No allergies reported</p>\n                  )}\n                </div>\n                \n                <div className=\"health-section\">\n                  <h4>Medical Conditions</h4>\n                  {userData.conditions.length > 0 ? (\n                    <ul className=\"tag-list\">\n                      {userData.conditions.map((condition, index) => (\n                        <li key={index} className=\"tag\">{condition}</li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p>No medical conditions reported</p>\n                  )}\n                </div>\n              </div>\n            )}\n            \n            {activeTab === 'predictions' && (\n              <div className=\"predictions-tab\">\n                <h3>Your Health Risk Predictions</h3>\n                <div className=\"predictions-list\">\n                  {userData.predictions.map((prediction, index) => (\n                    <div key={index} className=\"prediction-card\">\n                      <div className=\"prediction-date\">{prediction.date}</div>\n                      <div className=\"prediction-risk\">{prediction.risk}</div>\n                      <div className=\"risk-meter\">\n                        <div \n                          className=\"risk-level\" \n                          style={{\n                            width: `${prediction.score}%`,\n                            backgroundColor: prediction.score < 30 ? '#2ecc71' : \n                                            prediction.score < 70 ? '#f39c12' : '#e74c3c'\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {activeTab === 'trends' && (\n              <div className=\"trends-tab\">\n                <h3>Your Health Trends</h3>\n                \n                <div className=\"trend-section\">\n                  <h4>Blood Pressure</h4>\n                  <div className=\"trend-data\">\n                    {userData.trends.bloodPressure.map((item, index) => (\n                      <div key={index} className=\"trend-point\">\n                        <div className=\"trend-date\">{item.date}</div>\n                        <div className=\"trend-value\">{item.value}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"trend-section\">\n                  <h4>Weight</h4>\n                  <div className=\"trend-data\">\n                    {userData.trends.weight.map((item, index) => (\n                      <div key={index} className=\"trend-point\">\n                        <div className=\"trend-date\">{item.date}</div>\n                        <div className=\"trend-value\">{item.value}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return null;\n}\n\nexport default HealthProfiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}